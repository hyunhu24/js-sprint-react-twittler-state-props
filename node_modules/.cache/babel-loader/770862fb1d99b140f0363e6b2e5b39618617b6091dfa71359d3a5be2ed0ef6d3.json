{"ast":null,"code":"var _jsxFileName = \"C:\\\\study\\\\react\\\\homework\\\\js-sprint-react-twittler-state-props\\\\src\\\\Components\\\\Tweet.js\";\nimport React from 'react';\nimport './Tweet.css'; // const Tweet = ({ tweet }) => {\n//   const parsedDate = new Date(tweet.createdAt).toLocaleDateString('ko-kr');\n//   return (\n//     <li className=\"tweet\" id={tweet.id}>\n//       <div className=\"tweet__profile\">\n//         <img src={tweet.picture} alt=\"Profile\" />\n//       </div>\n//       <div className=\"tweet__content\">\n//         <div className=\"tweet__userInfo\">\n//           <div className=\"tweet__userInfo--wrapper\">\n//             <span className='tweet__username'>{tweet.username}</span>\n//             <span className='tweet__createdAt'>{parsedDate}</span>\n//           </div>\n//         </div>\n//         <div className=\"tweet__message\">{tweet.content}</div>\n//       </div>\n//     </li>\n//   );\n// };\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Tweet = _ref => {\n  let {\n    id,\n    username,\n    content,\n    picture,\n    createdAt\n  } = _ref;\n  const parsedDate = new Date(createdAt).toLocaleDateString('ko-kr');\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    className: \"tweet\",\n    id: id,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tweet__profile\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        alt: \"Profile\",\n        src: picture\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tweet__content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tweet__userInfo\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tweet__userInfo--wrapper\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"tweet__username\",\n            children: username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 23\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"tweet__createdAt\",\n            children: parsedDate\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 23\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 19\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tweet__message\",\n        children: content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 7\n  }, this);\n};\n\n_c = Tweet;\nexport default Tweet;\n\nvar _c;\n\n$RefreshReg$(_c, \"Tweet\");","map":{"version":3,"names":["React","Tweet","id","username","content","picture","createdAt","parsedDate","Date","toLocaleDateString"],"sources":["C:/study/react/homework/js-sprint-react-twittler-state-props/src/Components/Tweet.js"],"sourcesContent":["import React from 'react';\nimport './Tweet.css';\n\n// const Tweet = ({ tweet }) => {\n//   const parsedDate = new Date(tweet.createdAt).toLocaleDateString('ko-kr');\n\n//   return (\n//     <li className=\"tweet\" id={tweet.id}>\n//       <div className=\"tweet__profile\">\n//         <img src={tweet.picture} alt=\"Profile\" />\n//       </div>\n//       <div className=\"tweet__content\">\n//         <div className=\"tweet__userInfo\">\n//           <div className=\"tweet__userInfo--wrapper\">\n//             <span className='tweet__username'>{tweet.username}</span>\n//             <span className='tweet__createdAt'>{parsedDate}</span>\n//           </div>\n//         </div>\n//         <div className=\"tweet__message\">{tweet.content}</div>\n//       </div>\n//     </li>\n//   );\n// };\n\nconst Tweet = ({ id, username, content, picture, createdAt }) => {\n  const parsedDate = new Date(createdAt).toLocaleDateString('ko-kr')\n\n  return (\n      <li className=\"tweet\" id={id}>\n          <div className=\"tweet__profile\">\n              <img alt=\"Profile\" src={picture} />\n          </div>\n          <div className=\"tweet__content\">\n              <div className=\"tweet__userInfo\">\n                  <div className=\"tweet__userInfo--wrapper\">\n                      <span className=\"tweet__username\">{username}</span>\n                      <span className=\"tweet__createdAt\">{parsedDate}</span>\n                  </div>\n              </div>\n              <div className=\"tweet__message\">{content}</div>\n          </div>\n      </li>\n  )\n}\n\n\nexport default Tweet;\n"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,aAAP,C,CAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAEA,MAAMC,KAAK,GAAG,QAAmD;EAAA,IAAlD;IAAEC,EAAF;IAAMC,QAAN;IAAgBC,OAAhB;IAAyBC,OAAzB;IAAkCC;EAAlC,CAAkD;EAC/D,MAAMC,UAAU,GAAG,IAAIC,IAAJ,CAASF,SAAT,EAAoBG,kBAApB,CAAuC,OAAvC,CAAnB;EAEA,oBACI;IAAI,SAAS,EAAC,OAAd;IAAsB,EAAE,EAAEP,EAA1B;IAAA,wBACI;MAAK,SAAS,EAAC,gBAAf;MAAA,uBACI;QAAK,GAAG,EAAC,SAAT;QAAmB,GAAG,EAAEG;MAAxB;QAAA;QAAA;QAAA;MAAA;IADJ;MAAA;MAAA;MAAA;IAAA,QADJ,eAII;MAAK,SAAS,EAAC,gBAAf;MAAA,wBACI;QAAK,SAAS,EAAC,iBAAf;QAAA,uBACI;UAAK,SAAS,EAAC,0BAAf;UAAA,wBACI;YAAM,SAAS,EAAC,iBAAhB;YAAA,UAAmCF;UAAnC;YAAA;YAAA;YAAA;UAAA,QADJ,eAEI;YAAM,SAAS,EAAC,kBAAhB;YAAA,UAAoCI;UAApC;YAAA;YAAA;YAAA;UAAA,QAFJ;QAAA;UAAA;UAAA;UAAA;QAAA;MADJ;QAAA;QAAA;QAAA;MAAA,QADJ,eAOI;QAAK,SAAS,EAAC,gBAAf;QAAA,UAAiCH;MAAjC;QAAA;QAAA;QAAA;MAAA,QAPJ;IAAA;MAAA;MAAA;MAAA;IAAA,QAJJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAgBD,CAnBD;;KAAMH,K;AAsBN,eAAeA,KAAf","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}