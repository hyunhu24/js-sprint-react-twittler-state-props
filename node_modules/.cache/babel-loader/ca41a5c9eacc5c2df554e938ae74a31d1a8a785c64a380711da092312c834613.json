{"ast":null,"code":"var _jsxFileName = \"C:\\\\study\\\\react\\\\homework\\\\js-sprint-react-twittler-state-props\\\\src\\\\Pages\\\\Tweets.js\",\n    _s = $RefreshSig$();\n\n// TODO : useState를 react로 부터 import 합니다.\nimport React, { use, useState } from 'react';\nimport Footer from '../Footer';\nimport Tweet from '../Components/Tweet';\nimport './Tweets.css';\nimport dummyTweets from '../static/dummyData'; // const Tweets = () => {\n//   // TODO : 새로 트윗을 작성하고 전송할 수 있게 useState를 적절히 활용하세요.\n//   const [userName, setUserName] = useState(\"\");\n//   const [tweetContent, setTweetContent] = useState(\"\");\n//   const handleButtonClick = (event) => {\n//     const tweet = {};\n//     // TODO : Tweet button 엘리먼트 클릭시 작동하는 함수를 완성하세요.\n//     // 트윗 전송이 가능하게 작성해야 합니다.\n//   };\n//   const handleChangeUser = (event) => {\n//     // TODO : Tweet input 엘리먼트에 입력 시 작동하는 함수를 완성하세요.\n//     setUserName(event.target.value);\n//   };\n//   const handleChangeMsg = (event) => {\n//     // TODO : Tweet textarea 엘리먼트에 입력 시 작동하는 함수를 완성하세요.\n//     setTweetContent(event.target.value);\n//   };\n//   return (\n//     <React.Fragment>\n//       <div className=\"tweetForm__container\">\n//         <div className=\"tweetForm__wrapper\">\n//           <div className=\"tweetForm__profile\">\n//             <img src=\"https://randomuser.me/api/portraits/men/98.jpg\" />\n//           </div>\n//           <div className=\"tweetForm__inputContainer\">\n//             <div className=\"tweetForm__inputWrapper\">\n//               <div className=\"tweetForm__input\">\n//                 <input\n//                   type=\"text\"\n//                   value={userName}\n//                   placeholder=\"your username here..\"\n//                   className=\"tweetForm__input--username\"\n//                   onChange={handleChangeUser}\n//                 ></input>\n//                <textarea value={tweetContent} className='tweetForm__input--message' onChange={handleChangeMsg}></textarea>\n//               </div>\n//               <div className=\"tweetForm__count\" role=\"status\">\n//                 <span className=\"tweetForm__count__text\">\n//                   {/* TODO : 트윗 총 개수를 보여줄 수 있는 Counter를 작성하세요. */}\n//                   {'total: '}\n//                 </span>\n//               </div>\n//             </div>\n//             <div className=\"tweetForm__submit\">\n//               <div className=\"tweetForm__submitIcon\"></div>\n//               {/* TODO : 작성한 트윗을 전송할 수 있는 button 엘리먼트를 작성하세요. */}\n//             </div>\n//           </div>\n//         </div>\n//       </div>\n//       <div className=\"tweet__selectUser\"></div>\n//       <ul className=\"tweets\">\n//         {/* TODO : 하나의 트윗이 아니라, 주어진 트윗 목록(dummyTweets) 갯수에 맞게 보여줘야 합니다. */}\n//         <Tweet tweet={dummyTweets[0]} />\n//       </ul>\n//       <Footer />\n//     </React.Fragment>\n//   );\n// };\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Tweets = () => {\n  _s();\n\n  const [userName, setUserName] = useState(\"\");\n  const [tweetContent, setTweetContent] = useState(\"\");\n  const [tweets, setTweets] = useState(dummyTweets);\n\n  const handleButtonClick = event => {\n    event.preventDefault();\n\n    if (userName && tweetContent) {\n      const newTweet = {\n        id: tweets.length + 1,\n        username: userName,\n        content: tweetContent,\n        createdAt: new Date().toISOString(),\n        picture: \"https://randomuser.me/api/portraits/men/98.jpg\"\n      };\n      setTweets([newTweet, ...tweets]);\n      setUserName(\"\");\n      setTweetContent(\"\");\n    }\n  };\n\n  const handleChangeUser = event => {\n    setUserName(event.target.value);\n  };\n\n  const handleChangeMsg = event => {\n    setTweetContent(event.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tweetForm__container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tweetForm__wrapper\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tweetForm__profile\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"https://randomuser.me/api/portraits/men/98.jpg\",\n            alt: \"Profile\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tweetForm__inputContainer\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"tweetForm__inputWrapper\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"tweetForm__input\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                value: userName,\n                placeholder: \"your username here..\",\n                className: \"tweetForm__input--username\",\n                onChange: handleChangeUser\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 113,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                value: tweetContent,\n                className: \"tweetForm__input--message\",\n                onChange: handleChangeMsg,\n                placeholder: \"What's happening?\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 120,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"tweetForm__count\",\n              role: \"status\",\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"tweetForm__count__text\",\n                children: `total: ${tweets.length}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 128,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"tweetForm__submit\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"tweetForm__submitIcon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleButtonClick,\n              children: \"Tweet\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tweet__selectUser\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"tweets\",\n      children: tweets.map(tweet => /*#__PURE__*/_jsxDEV(Tweet, {\n        tweet: tweet\n      }, tweet.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Tweets, \"LGsb/XfFEsJy2ysyct/hME8BpGg=\");\n\n_c = Tweets;\nexport default Tweets;\n\nvar _c;\n\n$RefreshReg$(_c, \"Tweets\");","map":{"version":3,"names":["React","use","useState","Footer","Tweet","dummyTweets","Tweets","userName","setUserName","tweetContent","setTweetContent","tweets","setTweets","handleButtonClick","event","preventDefault","newTweet","id","length","username","content","createdAt","Date","toISOString","picture","handleChangeUser","target","value","handleChangeMsg","map","tweet"],"sources":["C:/study/react/homework/js-sprint-react-twittler-state-props/src/Pages/Tweets.js"],"sourcesContent":["// TODO : useState를 react로 부터 import 합니다.\nimport React, { use, useState } from 'react';\nimport Footer from '../Footer';\nimport Tweet from '../Components/Tweet';\nimport './Tweets.css';\nimport dummyTweets from '../static/dummyData';\n\n// const Tweets = () => {\n//   // TODO : 새로 트윗을 작성하고 전송할 수 있게 useState를 적절히 활용하세요.\n//   const [userName, setUserName] = useState(\"\");\n//   const [tweetContent, setTweetContent] = useState(\"\");\n\n//   const handleButtonClick = (event) => {\n//     const tweet = {};\n//     // TODO : Tweet button 엘리먼트 클릭시 작동하는 함수를 완성하세요.\n//     // 트윗 전송이 가능하게 작성해야 합니다.\n//   };\n\n//   const handleChangeUser = (event) => {\n//     // TODO : Tweet input 엘리먼트에 입력 시 작동하는 함수를 완성하세요.\n//     setUserName(event.target.value);\n//   };\n\n//   const handleChangeMsg = (event) => {\n//     // TODO : Tweet textarea 엘리먼트에 입력 시 작동하는 함수를 완성하세요.\n//     setTweetContent(event.target.value);\n//   };\n\n//   return (\n//     <React.Fragment>\n//       <div className=\"tweetForm__container\">\n//         <div className=\"tweetForm__wrapper\">\n//           <div className=\"tweetForm__profile\">\n//             <img src=\"https://randomuser.me/api/portraits/men/98.jpg\" />\n//           </div>\n//           <div className=\"tweetForm__inputContainer\">\n//             <div className=\"tweetForm__inputWrapper\">\n//               <div className=\"tweetForm__input\">\n//                 <input\n//                   type=\"text\"\n//                   value={userName}\n//                   placeholder=\"your username here..\"\n//                   className=\"tweetForm__input--username\"\n//                   onChange={handleChangeUser}\n//                 ></input>\n//                <textarea value={tweetContent} className='tweetForm__input--message' onChange={handleChangeMsg}></textarea>\n//               </div>\n//               <div className=\"tweetForm__count\" role=\"status\">\n//                 <span className=\"tweetForm__count__text\">\n//                   {/* TODO : 트윗 총 개수를 보여줄 수 있는 Counter를 작성하세요. */}\n//                   {'total: '}\n//                 </span>\n//               </div>\n//             </div>\n//             <div className=\"tweetForm__submit\">\n//               <div className=\"tweetForm__submitIcon\"></div>\n//               {/* TODO : 작성한 트윗을 전송할 수 있는 button 엘리먼트를 작성하세요. */}\n//             </div>\n//           </div>\n//         </div>\n//       </div>\n//       <div className=\"tweet__selectUser\"></div>\n//       <ul className=\"tweets\">\n//         {/* TODO : 하나의 트윗이 아니라, 주어진 트윗 목록(dummyTweets) 갯수에 맞게 보여줘야 합니다. */}\n//         <Tweet tweet={dummyTweets[0]} />\n//       </ul>\n//       <Footer />\n//     </React.Fragment>\n//   );\n// };\n\n\n\nconst Tweets = () => {\n  const [userName, setUserName] = useState(\"\");\n  const [tweetContent, setTweetContent] = useState(\"\");\n  const [tweets, setTweets] = useState(dummyTweets);\n\n  const handleButtonClick = (event) => {\n    event.preventDefault();\n    if (userName && tweetContent) {\n      const newTweet = {\n        id: tweets.length + 1,\n        username: userName,\n        content: tweetContent,\n        createdAt: new Date().toISOString(),\n        picture: \"https://randomuser.me/api/portraits/men/98.jpg\"\n      };\n      setTweets([newTweet, ...tweets]);\n      setUserName(\"\");\n      setTweetContent(\"\");\n    }\n  };\n\n  const handleChangeUser = (event) => {\n    setUserName(event.target.value);\n  };\n\n  const handleChangeMsg = (event) => {\n    setTweetContent(event.target.value);\n  };\n\n  return (\n    <React.Fragment>\n      <div className=\"tweetForm__container\">\n        <div className=\"tweetForm__wrapper\">\n          <div className=\"tweetForm__profile\">\n            <img src=\"https://randomuser.me/api/portraits/men/98.jpg\" alt=\"Profile\" />\n          </div>\n          <div className=\"tweetForm__inputContainer\">\n            <div className=\"tweetForm__inputWrapper\">\n              <div className=\"tweetForm__input\">\n                <input\n                  type=\"text\"\n                  value={userName}\n                  placeholder=\"your username here..\"\n                  className=\"tweetForm__input--username\"\n                  onChange={handleChangeUser}\n                />\n                <textarea \n                  value={tweetContent} \n                  className='tweetForm__input--message' \n                  onChange={handleChangeMsg}\n                  placeholder=\"What's happening?\"\n                />\n              </div>\n              <div className=\"tweetForm__count\" role=\"status\">\n                <span className=\"tweetForm__count__text\">\n                  {`total: ${tweets.length}`}\n                </span>\n              </div>\n            </div>\n            <div className=\"tweetForm__submit\">\n              <div className=\"tweetForm__submitIcon\"></div>\n              <button onClick={handleButtonClick}>Tweet</button>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"tweet__selectUser\"></div>\n      <ul className=\"tweets\">\n        {tweets.map(tweet => (\n          <Tweet key={tweet.id} tweet={tweet} />\n        ))}\n      </ul>\n      <Footer />\n    </React.Fragment>\n  );\n};\n\nexport default Tweets;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}