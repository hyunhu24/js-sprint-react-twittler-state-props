{"ast":null,"code":"var _jsxFileName = \"C:\\\\study\\\\react\\\\homework\\\\js-sprint-react-twittler-state-props\\\\src\\\\Pages\\\\Tweets.js\",\n    _s = $RefreshSig$();\n\n// TODO : useState를 react로 부터 import 합니다.\nimport React, { use, useState } from 'react';\nimport Footer from '../Footer';\nimport Tweet from '../Components/Tweet';\nimport './Tweets.css';\nimport dummyTweets from '../static/dummyData';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Tweets = () => {\n  _s();\n\n  // TODO : 새로 트윗을 작성하고 전송할 수 있게 useState를 적절히 활용하세요.\n  const [userName, setUserName] = useState(\"\");\n  const [tweetContent, setTweetContent] = useState(\"\");\n  const [tweet, setTweet] = useState(dummyTweets);\n\n  const handleButtonClick = event => {\n    const newTweet = {\n      id: tweet.length + 1,\n      username: userName,\n      content: tweetContent\n    };\n    setTweet = [newTweet, ...tweet];\n  };\n\n  const handleChangeUser = event => {\n    // TODO : Tweet input 엘리먼트에 입력 시 작동하는 함수를 완성하세요.\n    setUserName(event.target.value);\n  };\n\n  const handleChangeMsg = event => {\n    // TODO : Tweet textarea 엘리먼트에 입력 시 작동하는 함수를 완성하세요.\n    setTweetContent(event.target.value);\n  }; // const [tweets, setTweets] = useState(dummyTweets);\n  // const handleButtonClick = (event) => {\n  //   event.preventDefault();\n  //   if (userName && tweetContent) {\n  //     const newTweet = {\n  //       id: tweets.length + 1,\n  //       username: userName,\n  //       content: tweetContent,\n  //       createdAt: new Date().toISOString(),\n  //       picture: \"https://randomuser.me/api/portraits/men/98.jpg\"\n  //     };\n  //     setTweets([newTweet, ...tweets]);\n  //     setUserName(\"\");\n  //     setTweetContent(\"\");\n  //   }\n  // };\n\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tweetForm__container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tweetForm__wrapper\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tweetForm__profile\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"https://randomuser.me/api/portraits/men/98.jpg\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tweetForm__inputContainer\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"tweetForm__inputWrapper\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"tweetForm__input\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                value: userName,\n                placeholder: \"your username here..\",\n                className: \"tweetForm__input--username\",\n                onChange: handleChangeUser\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 61,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                value: tweetContent,\n                className: \"tweetForm__input--message\",\n                onChange: handleChangeMsg\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 16\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"tweetForm__count\",\n              role: \"status\",\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"tweetForm__count__text\",\n                children: `total: ${tweet.length}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"tweetForm__submit\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"tweetForm__submitIcon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tweet__selectUser\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"tweets\",\n      children: /*#__PURE__*/_jsxDEV(Tweet, {\n        tweet: dummyTweets[0]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Tweets, \"8C6M7QCnIrYc0QJ7RLIQf9Z2RTA=\");\n\n_c = Tweets;\nexport default Tweets;\n\nvar _c;\n\n$RefreshReg$(_c, \"Tweets\");","map":{"version":3,"names":["React","use","useState","Footer","Tweet","dummyTweets","Tweets","userName","setUserName","tweetContent","setTweetContent","tweet","setTweet","handleButtonClick","event","newTweet","id","length","username","content","handleChangeUser","target","value","handleChangeMsg"],"sources":["C:/study/react/homework/js-sprint-react-twittler-state-props/src/Pages/Tweets.js"],"sourcesContent":["// TODO : useState를 react로 부터 import 합니다.\nimport React, { use, useState } from 'react';\nimport Footer from '../Footer';\nimport Tweet from '../Components/Tweet';\nimport './Tweets.css';\nimport dummyTweets from '../static/dummyData';\n\nconst Tweets = () => {\n  // TODO : 새로 트윗을 작성하고 전송할 수 있게 useState를 적절히 활용하세요.\n  const [userName, setUserName] = useState(\"\");\n  const [tweetContent, setTweetContent] = useState(\"\");\n  const [tweet, setTweet] = useState(dummyTweets);\n\n  const handleButtonClick = (event) => {\n    const newTweet = {\n        id : tweet.length + 1,\n        username : userName,\n        content : tweetContent\n    };\n    setTweet = ([newTweet, ...tweet]);\n  };\n\n  const handleChangeUser = (event) => {\n    // TODO : Tweet input 엘리먼트에 입력 시 작동하는 함수를 완성하세요.\n    setUserName(event.target.value);\n  };\n\n  const handleChangeMsg = (event) => {\n    // TODO : Tweet textarea 엘리먼트에 입력 시 작동하는 함수를 완성하세요.\n    setTweetContent(event.target.value);\n  };\n\n  // const [tweets, setTweets] = useState(dummyTweets);\n\n  // const handleButtonClick = (event) => {\n  //   event.preventDefault();\n  //   if (userName && tweetContent) {\n  //     const newTweet = {\n  //       id: tweets.length + 1,\n  //       username: userName,\n  //       content: tweetContent,\n  //       createdAt: new Date().toISOString(),\n  //       picture: \"https://randomuser.me/api/portraits/men/98.jpg\"\n  //     };\n  //     setTweets([newTweet, ...tweets]);\n  //     setUserName(\"\");\n  //     setTweetContent(\"\");\n  //   }\n  // };\n\n  return (\n    <React.Fragment>\n      <div className=\"tweetForm__container\">\n        <div className=\"tweetForm__wrapper\">\n          <div className=\"tweetForm__profile\">\n            <img src=\"https://randomuser.me/api/portraits/men/98.jpg\" />\n          </div>\n          <div className=\"tweetForm__inputContainer\">\n            <div className=\"tweetForm__inputWrapper\">\n              <div className=\"tweetForm__input\">\n                <input\n                  type=\"text\"\n                  value={userName}\n                  placeholder=\"your username here..\"\n                  className=\"tweetForm__input--username\"\n                  onChange={handleChangeUser}\n                ></input>\n               <textarea value={tweetContent} className='tweetForm__input--message' onChange={handleChangeMsg}></textarea>\n              </div>\n              <div className=\"tweetForm__count\" role=\"status\">\n                <span className=\"tweetForm__count__text\">\n                  {/* TODO : 트윗 총 개수를 보여줄 수 있는 Counter를 작성하세요. */}\n                  {`total: ${tweet.length}`}\n                </span>\n              </div>\n            </div>\n            <div className=\"tweetForm__submit\">\n              <div className=\"tweetForm__submitIcon\"></div>\n              {/* TODO : 작성한 트윗을 전송할 수 있는 button 엘리먼트를 작성하세요. */}\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"tweet__selectUser\"></div>\n      <ul className=\"tweets\">\n        {/* TODO : 하나의 트윗이 아니라, 주어진 트윗 목록(dummyTweets) 갯수에 맞게 보여줘야 합니다. */}\n        <Tweet tweet={dummyTweets[0]} />\n      </ul>\n      <Footer />\n    </React.Fragment>\n  );\n};\n\n\n\n\nexport default Tweets;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}