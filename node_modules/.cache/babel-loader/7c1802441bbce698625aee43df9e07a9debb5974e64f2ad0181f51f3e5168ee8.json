{"ast":null,"code":"var _jsxFileName = \"C:\\\\study\\\\react\\\\homework\\\\js-sprint-react-twittler-state-props\\\\src\\\\Pages\\\\MyPage.js\";\nimport React from 'react';\nimport Footer from '../Footer';\nimport Tweet from '../Components/Tweet';\nimport './MyPage.css';\nimport dummyTweets from '../static/dummyData';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MyPage = _ref => {\n  let {\n    currentUser\n  } = _ref;\n  const filteredTweets = dummyTweets.filter(el => el.username === currentUser); // TODO : 주어진 트윗 목록(dummyTweets)중 현재 유져인 parkhacker의 트윗만 보여줘야 합니다.\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"myInfo\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"myInfo__container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"myInfo__wrapper\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"myInfo__profile\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: filteredTweets[0].picture\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 16,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"myInfo__detail\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"myInfo__detailName\",\n            children: filteredTweets[0].username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"28 \\uD314\\uB85C\\uC6CC 100 \\uD314\\uB85C\\uC789\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"tweets__mypage\",\n      children: filteredTweets.map(el => /*#__PURE__*/_jsxDEV(Tweet, {\n        tweet: el\n      }, el.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 33\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n};\n\n_c = MyPage;\nexport default MyPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyPage\");","map":{"version":3,"names":["React","Footer","Tweet","dummyTweets","MyPage","currentUser","filteredTweets","filter","el","username","picture","map","id"],"sources":["C:/study/react/homework/js-sprint-react-twittler-state-props/src/Pages/MyPage.js"],"sourcesContent":["import React from 'react';\nimport Footer from '../Footer';\nimport Tweet from '../Components/Tweet';\nimport './MyPage.css';\nimport dummyTweets from '../static/dummyData';\n\nconst MyPage = ({ currentUser }) => {\n  const filteredTweets = dummyTweets.filter(el => el.username === currentUser);\n  // TODO : 주어진 트윗 목록(dummyTweets)중 현재 유져인 parkhacker의 트윗만 보여줘야 합니다.\n\n  return (\n    <section className=\"myInfo\">\n      <div className=\"myInfo__container\">\n        <div className=\"myInfo__wrapper\">\n          <div className=\"myInfo__profile\">\n            <img src={filteredTweets[0].picture} />\n          </div>\n          <div className=\"myInfo__detail\">\n            <p className=\"myInfo__detailName\">\n              {filteredTweets[0].username}\n            </p>\n            <p>28 팔로워 100 팔로잉</p>\n          </div>\n        </div>\n      </div>\n      <ul className=\"tweets__mypage\">\n      {filteredTweets.map(el => <Tweet key={el.id} tweet={el} />)}\n      </ul>\n      <Footer />\n    </section>\n  );\n};\n\nexport default MyPage;\n"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,WAAnB;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,OAAO,cAAP;AACA,OAAOC,WAAP,MAAwB,qBAAxB;;;AAEA,MAAMC,MAAM,GAAG,QAAqB;EAAA,IAApB;IAAEC;EAAF,CAAoB;EAClC,MAAMC,cAAc,GAAGH,WAAW,CAACI,MAAZ,CAAmBC,EAAE,IAAIA,EAAE,CAACC,QAAH,KAAgBJ,WAAzC,CAAvB,CADkC,CAElC;;EAEA,oBACE;IAAS,SAAS,EAAC,QAAnB;IAAA,wBACE;MAAK,SAAS,EAAC,mBAAf;MAAA,uBACE;QAAK,SAAS,EAAC,iBAAf;QAAA,wBACE;UAAK,SAAS,EAAC,iBAAf;UAAA,uBACE;YAAK,GAAG,EAAEC,cAAc,CAAC,CAAD,CAAd,CAAkBI;UAA5B;YAAA;YAAA;YAAA;UAAA;QADF;UAAA;UAAA;UAAA;QAAA,QADF,eAIE;UAAK,SAAS,EAAC,gBAAf;UAAA,wBACE;YAAG,SAAS,EAAC,oBAAb;YAAA,UACGJ,cAAc,CAAC,CAAD,CAAd,CAAkBG;UADrB;YAAA;YAAA;YAAA;UAAA,QADF,eAIE;YAAA,UAAG;UAAH;YAAA;YAAA;YAAA;UAAA,QAJF;QAAA;UAAA;UAAA;UAAA;QAAA,QAJF;MAAA;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QADF,eAcE;MAAI,SAAS,EAAC,gBAAd;MAAA,UACCH,cAAc,CAACK,GAAf,CAAmBH,EAAE,iBAAI,QAAC,KAAD;QAAmB,KAAK,EAAEA;MAA1B,GAAYA,EAAE,CAACI,EAAf;QAAA;QAAA;QAAA;MAAA,QAAzB;IADD;MAAA;MAAA;MAAA;IAAA,QAdF,eAiBE,QAAC,MAAD;MAAA;MAAA;MAAA;IAAA,QAjBF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAqBD,CAzBD;;KAAMR,M;AA2BN,eAAeA,MAAf","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}